/****************************************************************************
**
** Copyright (C) 2014
**
** This file is generated by the Magus toolkit
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
****************************************************************************/

#ifndef MAGUS_TOOL_LAYERED_SCENEVIEW_WIDGET_H
#define MAGUS_TOOL_LAYERED_SCENEVIEW_WIDGET_H

#include <QHBoxLayout>
#include "tool_layerwidget.h"
#include "tool_sceneviewwidget.h"

QT_BEGIN_NAMESPACE

QT_END_NAMESPACE

namespace Magus
{
    /****************************************************************************
    Main class for sceneview widget with layers. This widget is a combination of
    2 other widgets, resp. QtSceneViewWidget and QtLayerWidget.
    Each layer in the QtLayerWidget is associated with a sceneview tree in the
    QtSceneViewWidget. Assets displayed in the sceneview tree are associated with
    the corresponding layer.

    Note: QtLayeredSceneViewWidget is a convenient class. Use the internal
    QtSceneViewWidget (getSceneViewWidget) and QtLayerWidget (getLayerWidget())
    for interaction.
    ***************************************************************************/
    class QtLayeredSceneViewWidget : public QWidget
    {
        Q_OBJECT

        public:
            QtLayeredSceneViewWidget(const QString iconDir, QWidget* parent = 0);
            virtual ~QtLayeredSceneViewWidget(void);

            // Set a sceneviewwidget; this widgets is used to determine the item dragged and dropped
            void setSceneViewWidgetForDragDrop(QtSceneViewWidget* sceneViewWidget);

            // Return pointer to QtSceneViewWidget
            QtSceneViewWidget* getSceneViewWidget(void);

            // Return pointer to QtLayerWidget
            QtLayerWidget* getLayerWidget(void);

        protected slots:
            void handleLayerAdded(int layerId, const QString& name);

        private:
            QtSceneViewWidget* mSceneViewWidget;
            QtLayerWidget* mLayerWidget;
    };
}

#endif
