/****************************************************************************
**
** Copyright (C) 2014
**
** This file is generated by the Magus toolkit
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
****************************************************************************/

#ifndef MAGUS_ASSET_DIRTREE_H
#define MAGUS_ASSET_DIRTREE_H

#include <QWidget>
#include <QHBoxLayout>
#include <QVBoxLayout>
#include <QFileSystemModel>
#include <QTreeView>
#include <QHeaderView>
#include <QPushButton>

QT_BEGIN_NAMESPACE

QT_END_NAMESPACE

namespace Magus
{
    /****************************************************************************
    QWidget that displays a directory tree of the local filesystem
    ***************************************************************************/
    class QtDirTree : public QWidget
    {
        Q_OBJECT

        public:
            QtDirTree(QWidget* parent = 0);
            virtual ~QtDirTree(void);
            const QString& getSelectedAbsolutePath(void);
            void setButtonTitle(const QString& buttonTitle);


        signals:
            // Emitted when a directory is selected and the button is pressed
            void directorySelected(const QString&);

        private slots:
            void performAction(void);

        private:
            QFileSystemModel* mModel;
            QTreeView* mTree;
            QString mSelectedAbsolutePath;
            QPushButton* mPerformActionButton;
    };
}

#endif
