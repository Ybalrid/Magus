/****************************************************************************
**
** Copyright (C) 2016
**
** This file is generated by the Magus toolkit
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
****************************************************************************/

#ifndef MAGUS_PROPERTY_WIDGET_TEXTURE_H
#define MAGUS_PROPERTY_WIDGET_TEXTURE_H

#include <QWidget>
#include <QLabel>
#include <QPixmap>
#include <QPushButton>
#include <QLineEdit>
#include "asset_propertywidget.h"

QT_BEGIN_NAMESPACE

QT_END_NAMESPACE

namespace Magus
{
    /****************************************************************************
    Property class for textures
    ***************************************************************************/
    class QtTextureProperty : public QtProperty
    {
        Q_OBJECT

        public:
            QtTextureProperty(const QString& title, QWidget* parent = 0);
            virtual ~QtTextureProperty(void) {}
            void setTextureFileName(const QString& fileNameTexture);
            void setSearchPath(const QString& searchPath); // Used by the texture dialog to search for textures
            const QString& getTextureFileName(void);
            const QString& getTextureBaseFileName(void);
            const QString& getPathTexture(void);
            void setTextureSize(const QSize& size);

        private slots:
            void propertyValueChanged(void);
            void dialogButtonClicked(void);

        private:
            QString mFileNameTexture; // Fully qualified filename (path + filename)
            QString mBaseFileNameTexture; // Filename without path
            QString mPathTexture; // Path without filename
            QString mSearchPath;
            QLabel* mTextureLabel;
            QLineEdit* mTextureNameLabel;
            QPixmap mTexturePixmap;
            QSize mTextureSize;
            QPushButton* mDialogButton;
    };
}

#endif
