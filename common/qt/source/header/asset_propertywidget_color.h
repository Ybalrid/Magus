/****************************************************************************
**
** Copyright (C) 2016
**
** This file is generated by the Magus toolkit
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
****************************************************************************/

#ifndef MAGUS_PROPERTY_WIDGET_COLOR_H
#define MAGUS_PROPERTY_WIDGET_COLOR_H

#include <QWidget>
#include <QString>
#include <QLabel>
#include <QPushButton>
#include <QLineEdit>
#include "asset_propertywidget.h"

QT_BEGIN_NAMESPACE

QT_END_NAMESPACE

namespace Magus
{
    /****************************************************************************
    Property class to fill in color values
    ***************************************************************************/
    class QtColorProperty : public QtProperty
    {
        Q_OBJECT

        public:
            QtColorProperty(const QString& title, QWidget* parent = 0);
            virtual ~QtColorProperty(void) {}
            void setAlphaVisible(bool enabled);
            void setColor (unsigned int r, unsigned int g, unsigned int b, unsigned int a);
            void setColor (const QColor& color);
            const QColor& getColor (void) const;
            unsigned int getRed (void) const;
            unsigned int getGreen (void) const;
            unsigned int getBlue (void) const;
            unsigned int getAlpha (void) const;

        private slots:
            void propertyValueChangedRGBA(void);
            void propertyValueChangedHex(void);
            void dialogButtonClicked(void);

        private:
            void updateRGBAWithCurrentColor(void);
            void updateHexWithCurrentColor(void);
            QLineEdit* mR;
            QLineEdit* mG;
            QLineEdit* mB;
            QLineEdit* mA;
            QLineEdit* mHex;
            QColor mColorValue;
            QPushButton* mDialogButton;
            QLabel* mColorFill;
            QLabel* mLabelA;
            void updateColorFill (void);
    };
}

#endif
