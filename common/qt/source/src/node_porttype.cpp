/****************************************************************************
**
** Copyright (C) 2016
**
** This file is generated by the Magus toolkit
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
****************************************************************************/

// Include
#include <QMessageBox>
#include <QStyleOptionGraphicsItem>
#include <QLinearGradient>
#include <QPen>
#include <QBrush>
#include <QColor>
#include <QPainter>
#include <QPixmap>
#include "node_constants.h"
//#include "node_node.h"
#include "node_porttype.h"

namespace Magus
{
    //****************************************************************************/
    QtPortType::QtPortType(void)
    {
    }

    //****************************************************************************/
    QtPortType::~QtPortType(void)
    {
    }

    //****************************************************************************/
    void QtPortType::addPortTypeToConnectionPolicy(const QtPortType& portType)
    {
        mConnectionPolicy.append(portType.mPortType);
    }

    //****************************************************************************/
    bool QtPortType::isConnectionAllowed(const QtPortType& portType)
    {
        foreach(unsigned int type, mConnectionPolicy)
        {
            if (type == portType.mPortType)
                return true;
        }

        return false;
    }

    //****************************************************************************/
    void QtPortType::clearConnectionPolicy (void)
    {
        mConnectionPolicy.clear();
    }


    //****************************************************************************/
    //****************************************************************************/
    //****************************************************************************/
    QtInputPortType::QtInputPortType(void) : QtPortType()
    {
        mPortType = NODE_PORT_TYPE_INPUT;
    }

    //****************************************************************************/
    //****************************************************************************/
    //****************************************************************************/
    QtOutputPortType::QtOutputPortType(void) : QtPortType()
    {
        mPortType = NODE_PORT_TYPE_OUTPUT;
    }

}
