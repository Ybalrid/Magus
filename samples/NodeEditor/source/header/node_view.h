/****************************************************************************
**
** Copyright (C) 2016
**
** This file is generated by the Magus toolkit
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
****************************************************************************/

#ifndef MAGUS_NODE_VIEW_H
#define MAGUS_NODE_VIEW_H

#include <QGraphicsView>
#include <QMimeData>
#include <QDragEnterEvent>

QT_BEGIN_NAMESPACE

QT_END_NAMESPACE

namespace Magus
{
    /****************************************************************************
     * Subclass of a QGraphicsView. This is needed for accepting dropped
     * content
    ***************************************************************************/
    class QtNodeGraphicsView : public QGraphicsView
    {
        Q_OBJECT

        public:
            QtNodeGraphicsView(QWidget* parent = 0) : QGraphicsView(parent)
            {
                setAcceptDrops(true);
            }
            virtual ~QtNodeGraphicsView(void){}

        signals:
            // Emitted when something is dropped
            void dropped(void);

        protected:
            virtual void dropEvent(QDropEvent* event)
            {
                emit dropped (); // Do not check for mimetype
                event->acceptProposedAction();
            }

            virtual void dragEnterEvent(QDragEnterEvent *event)
            {
                event->acceptProposedAction();
            }

            virtual void dragMoveEvent(QDragMoveEvent *event)
            {
                event->acceptProposedAction();
            }
    };

}

#endif
