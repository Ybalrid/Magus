/****************************************************************************
**
** Copyright (C) 2014
**
** This file is generated by the Magus toolkit
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
****************************************************************************/

#ifndef MAGUS_TOOL_TEXTURE_WIDGET_H
#define MAGUS_TOOL_TEXTURE_WIDGET_H

#include <QWidget>
#include <QListView>
#include "tool_texturemodel.h"

QT_BEGIN_NAMESPACE

QT_END_NAMESPACE

namespace Magus
{
    /****************************************************************************
    Main class for texture selection widget
    ***************************************************************************/
    class QtTextureWidget : public QWidget
    {
        Q_OBJECT

        public:
            QtTextureWidget(QWidget* parent = 0);
            virtual ~QtTextureWidget(void);

            // fill the widget with all texture found in the searchPath
            // The searchPath is scanned recursively and all texture files are read
            // Note, that it can take a while to scane the whole directorytree
            void fillTextures(const QString& searchPath);

            // Return the fully qualified filename of the selected texture
            // E.g. "c:/temp/Tools/common/icons/info.png"
            const QString& getTextureFileName(void);

            // Return the base filename of the selected texture
            // E.g. "info.png"
            const QString& getTextureBaseFileName(void);

            // Define the width and height of a texture in the selection box
            void setTextureSize (QSize size);

            // If set to 'true', the sleected texture can also be dragged (and dropped) to another widget
            void setDragEnabled (bool enabled);

        signals:
            // Emitted when a texture is selected (via the mouse)
            void textureSelected(const QString& fileName);

        protected slots:
            void mouseClicked(void);
            void mouseOver(QModelIndex index);

        private:
            QListView *mSelectionList;
            QtTextureModel* mSelectionModel;
            QSize mTextureSize;
            QString mFileNameTexture; // Fully qualified filename (path + filename)
            QString mBaseFileNameTexture; // Filename without path
    };
}

#endif
