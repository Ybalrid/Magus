/****************************************************************************
**
** Copyright (C) 2014
**
** This file is generated by the Magus toolkit
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
****************************************************************************/

#ifndef SME_NODE_PASS_H
#define SME_NODE_PASS_H

#include "node_node.h"

QT_BEGIN_NAMESPACE

QT_END_NAMESPACE

namespace Magus
{
    class QtNodePass : public QtNode
    {
        public:
            QtNodePass(QString title, QGraphicsItem* parent = 0);
            virtual ~QtNodePass(void);

            // General
            bool isDepthCheck(void) const;
            bool isDepthWrite(void) const;
            bool isLighting(void) const;
            void setDepthCheck(bool depthCheck);
            void setDepthWrite(bool depthWrite);
            void setLighting(bool lighting);

            // Color
            const QColor& getAmbient(void);
            const QColor& getDiffuse(void);
            const QColor& getSpecular(void);
            void setAmbient(const QColor& col);
            void setDiffuse(const QColor& col);
            void setSpecular(const QColor& col);

        private:
            bool mDepthCheck;
            bool mDepthWrite;
            bool mLighting;
            QColor mAmbient;
            QColor mDiffuse;
            QColor mSpecular;
    };
}

#endif
