/****************************************************************************
**
** Copyright (C) 2014
**
** This file is generated by the Magus toolkit
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
****************************************************************************/

#ifndef MAGUS_PROPERTY_WIDGET_H
#define MAGUS_PROPERTY_WIDGET_H

#include <QWidget>
#include <QFont>

QT_BEGIN_NAMESPACE

QT_END_NAMESPACE

namespace Magus
{
    /****************************************************************************
    Abstract property class
    ***************************************************************************/
    class QtProperty : public QWidget
    {
        Q_OBJECT

        public:
            enum PropertyType {CHECKBOX,
                               XYZ,
                               XY,
                               STRING,
                               SELECT,
                               SLIDER,
                               DECIMAL,
                               COLOR,
                               TEXTURE,
                               CURVE,
                               QUATERNION};

            QtProperty(QWidget* parent) : QWidget(parent),
                                          mPropertyId(-1),
                                          mUserData(0){}
            virtual ~QtProperty(void){}
            void setEnabled(bool enabled)
            {
                QWidget::setEnabled(enabled);
                if (!enabled)
                {
                    setStyleSheet(QString("color: #aaaaaa; font: italic;"));
                }
            }

            PropertyType mType;
            int mPropertyId;
            int mParentContainerId;
            void* mUserData;

        signals:
            void valueChanged(QtProperty* property);
    };
}

#endif
