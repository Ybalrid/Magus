/****************************************************************************
**
** Copyright (C) 2014
**
** This file is generated by the Magus toolkit
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
****************************************************************************/

#ifndef SME_NODE_PORTTYPE_H
#define SME_NODE_PORTTYPE_H

#include "node_porttype.h"

QT_BEGIN_NAMESPACE

QT_END_NAMESPACE

namespace Magus
{
    //****************************************************************************/
    class QtMaterialInPortType : public QtPortType
    {
        public:
            QtMaterialInPortType(void);
            ~QtMaterialInPortType(void){};
    };

    //****************************************************************************/
    class QtMaterialOutPortType : public QtPortType
    {
        public:
            QtMaterialOutPortType(void);
            ~QtMaterialOutPortType(void){};
    };

    //****************************************************************************/
    class QtTechniqueInPortType : public QtPortType
    {
        public:
            QtTechniqueInPortType(void);
            ~QtTechniqueInPortType(void){};
    };

    //****************************************************************************/
    class QtTechniqueOutPortType : public QtPortType
    {
        public:
            QtTechniqueOutPortType(void);
            ~QtTechniqueOutPortType(void){};
    };

    //****************************************************************************/
    class QtPassInPortType : public QtPortType
    {
        public:
            QtPassInPortType(void);
            ~QtPassInPortType(void){};
    };

    //****************************************************************************/
    class QtPassOutPortType : public QtPortType
    {
        public:
            QtPassOutPortType(void);
            ~QtPassOutPortType(void){};
    };

    //****************************************************************************/
    class QtTextureUnitInPortType : public QtPortType
    {
        public:
            QtTextureUnitInPortType(void);
            ~QtTextureUnitInPortType(void){};
    };

    //****************************************************************************/
    class QtTextureUnitOutPortType : public QtPortType
    {
        public:
            QtTextureUnitOutPortType(void);
            ~QtTextureUnitOutPortType(void){};
    };
}

#endif
