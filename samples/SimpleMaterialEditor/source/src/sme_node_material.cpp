/****************************************************************************
**
** Copyright (C) 2014
**
** This file is generated by the Magus toolkit
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
****************************************************************************/

// Include
#include "sme_node_material.h"
#include "sme_node_porttype.h"
#include "constants.h"

namespace Magus
{
    //****************************************************************************/
    QtNodeMaterial::QtNodeMaterial(QString title, QGraphicsItem* parent) : QtNode(title, parent)
    {
        // Set defaults
        mMaterialName = QString ("");
        mSceneBlending = QString ("");

        // Define the connection policy
        QtTechniqueOutPortType techniqueOutPortType;
        QtMaterialInPortType materialInPortType;
        techniqueOutPortType.addPortTypeToConnectionPolicy(materialInPortType);

        // Custome node settings
        setTitleColor(Qt::white);
        setHeaderTitleIcon(ICON_MATERIAL_BOLD);
        setAction1Icon(ICON_MINMAX);
        setAction2Icon(ICON_CLOSE);
        alignTitle(ALIGNED_LEFT);
        setHeaderColor(QColor("#5853BD"));
        createPort(PORT_ID_MATERIAL,
                   PORT_TECHNIQUE_OUT,
                   techniqueOutPortType,
                   QColor("#874E96"),
                   PORT_SHAPE_CIRCLE,
                   ALIGNED_RIGHT,
                   QColor("#874E96"));
        setPortNameColor(Qt::white);
        setZoom(0.9);
    }

    //****************************************************************************/
    QtNodeMaterial::~QtNodeMaterial(void)
    {
    }

    //****************************************************************************/
    const QString& QtNodeMaterial::getMaterialName(void) const
    {
        return mMaterialName;
    }

    //****************************************************************************/
    void QtNodeMaterial::setMaterialName(const QString& materialName)
    {
        mMaterialName = materialName;
    }

    //****************************************************************************/
    const QString& QtNodeMaterial::getSceneBlending(void) const
    {
        return mSceneBlending;
    }

    //****************************************************************************/
    void QtNodeMaterial::setSceneBlending(const QString& sceneBlending)
    {
        mSceneBlending = sceneBlending;
    }

}

